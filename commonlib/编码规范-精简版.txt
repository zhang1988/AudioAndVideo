尽量遵守以下编码规范：

一、格式规范：
1、文件编码格式为UTF-8，不可以设置为GBK；
2、import文件不允许出现通配符；
3、与Server交互的数据Model中成员变量需要加注释；
4、类文件需要加头注释，注释模板：
/**
 * ${CLASS_NAME}
 * @author ${USER}
 * @date ${DATE}-${TIME}
 * @version 
 * @desc ${描述类实现的功能}
 */
5、全局变量注释使用/** … */
6、类方法最大行数：100，类文件警戒行数：700，类文件最大行数：1000；
7、switch语句都包含一个default语句组，即使它什么代码也不包含；
8、switch语句不要写Fall-through这样的写法，每个case都要包含break、return等语句；
9、集合框架类要指定集合元素的具体类型；
10、每个方法的嵌套层数不要超过3层，超过之后参照2.8.2修改；

二、命名规范：
以下命名不允许出现英文拼写错误
1、包名全部小写；类和接口命名采用大驼峰；
2、常量命名全部字母大写，单词使用下划线，并且必须是final类型；
3、变量命：局部变量名采用小驼峰；全局变量使用m打头的小驼峰；UI元素使用UI缩写打头的小驼峰，尽量与资源id名一致
4、第三方资源、布局文件需携带第三方前缀，如xrecyclerview_xxx_xxx.xml
5、xml布局id命名采用UI缩写打头的小驼峰,如TextView使用tvTitleView；
6、colors命名：c_{色值含义}_{英文字母字典排序}

三、项目规范：
1、@Override注解不能省略;
2、使用safe.JavaTypesHelper工具方法替代Integer.parseInteger，Long.parseLong;
//3、使用safe.ThreadService工具方法启动一个Thread；
4、常量判断类型值必须在前：if（constant == variable）；if（constant.equals(variable)）；
5、使用null进行判空：“null”.equals(string)；
6、使用JavaTypesHelper中的compareDouble(double1，double2)和compareFloat(float1，float2)替代double1 == double2、float1 == float2；
7、使用BigDecimal的add、subtract、multiply、divide对double进行+、-、×、/;
8、使用if（false == Boolean variable）而不是if（!Boolean variable），防止漏掉非符号；
9、代码提前必须格式化（只格式化自己修改部分的代码）：ALT+COMMAND+L—格式化，CTRL+ALT+O-去掉无效引用；
10、UI提供的资源放置在drawable-xhdpi目录下（和兼容性无关的图片）
11、Dialog Popwindow 统一使用ShowUtil.showXXXX(）；
12、对线程或单位有特殊要求的方法需要在方法名中写明白，如xxxInBackground, xxxxInUI, xxxInDip,xxxInPx
13、实现工具类，和业务无关的放到commonlib的util中，和业务相关的放到app的util下；
14、不要出现资源的硬编码，如字符串，色值，尺寸等；
15、每个Activity或Fragment使用单独主layout文件；


四、tip List:
1、代码规范不符合以上三点的有时间就改正；
2、本地大图片，在onStop时手工释放，onResume时再设置回来。避免oom
3、UI线程中不能有数据库（包括：KVCache），网络等慢操作；
4、注意是否有null未判空，数组越界；
5、注意类的命名，内部类和方法的代码组织是否有更清晰的组织方式；
6、底层不调用上层代码; 非公共包，类和方法不对包外可见，需要的需要单独声明。